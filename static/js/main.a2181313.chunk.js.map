{"version":3,"sources":["utils/fetchClient.ts","types/FilterStatus.ts","api/todos.ts","ErrorContext.tsx","TodosContext.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/ErrorNotification/ErrorNotification.tsx","utils/constants.tsx","components/Header/Header.tsx","components/Footer/Footer.tsx","App.tsx","utils/filterTodos.tsx","index.tsx"],"names":["BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","body","JSON","stringify","headers","then","fetch","response","ok","Error","json","Status","client","updateTodo","id","title","completed","userId","ErrorContext","React","createContext","error","setError","ErrorProvider","children","useState","value","useMemo","Provider","TodosContext","todos","uncompletedTodosAmount","setTodos","addNewTodo","a","isLoading","setIsLoading","tempTodo","setTempTodo","removeTodo","loadingMap","toggleTodo","editTodo","TodosProvider","setLoadingMap","useContext","useEffect","catch","filter","todo","length","createdTodo","addTodo","newTodo","currentTodos","err","finally","prevMap","todoId","toggledTodo","completedStatus","map","editedTodo","newTitle","updatedTodos","TodoItem","isHover","setIsHover","setNewTitle","isEditingMode","setIsEditingMode","titleField","useRef","current","focus","hadnleTitleChange","trim","data-cy","className","cn","onMouseEnter","onMouseLeave","onDoubleClick","htmlFor","type","checked","onChange","onSubmit","event","preventDefault","ref","placeholder","target","onKeyUp","key","onBlur","onClick","TodoList","ErrorNotification","hidden","aria-label","USER_ID","Header","newTodoTitle","setNewTodoTitle","active","isAllTodosCompleted","every","togglePromises","all","disabled","Footer","filterParam","onFilterChange","href","selected","All","Active","Completed","removePromises","App","setFilterParam","timer","clearTimeout","visibleTodos","fitlerParam","filterTodos","root","document","getElementById","render"],"mappings":"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","file":"static/js/main.a2181313.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nconst BASE_URL = 'https://mate.academy/students-api';\n\n// returns a promise resolved after a given delay\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\n// To have autocompletion and avoid mistypes\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null, // we can send any data to the server\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    // We add body and Content-Type only for the requests with data\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  // we wait for testing purpose to see loaders\n  return wait(100)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","export enum Status {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import { Todo } from '../types/Todo';\nimport { client } from '../utils/fetchClient';\n\nexport const getTodos = (userId: number) => {\n  return client.get<Todo[]>(`/todos?userId=${userId}`);\n};\n\nexport const addTodo = ({ title, completed, userId }: Omit <Todo, 'id'>) => {\n  return client.post<Todo>('/todos', { title, completed, userId });\n};\n\nexport const deleteTodo = (todoId: number) => {\n  return client.delete(`/todos/${todoId}`);\n};\n\nexport const updateTodo = ({\n  id,\n  title,\n  completed,\n  userId,\n}: Todo) => {\n  return client.patch<Todo>(`/todos/${id}`, { title, completed, userId });\n};\n","import React, { useMemo, useState } from 'react';\n\ntype ErrorState = {\n  error: string,\n  setError: (error: string) => void,\n};\n\nexport const ErrorContext = React.createContext<ErrorState>({\n  error: '',\n  setError: () => {},\n});\n\ninterface Props {\n  children: React.ReactNode,\n}\n\nexport const ErrorProvider: React.FC<Props> = ({ children }) => {\n  const [error, setError] = useState('');\n\n  const value = useMemo(() => ({\n    error,\n    setError,\n  }), [error]);\n\n  return (\n    <ErrorContext.Provider value={value}>\n      {children}\n    </ErrorContext.Provider>\n  );\n};\n","import React, {\n  useContext, useEffect, useMemo, useState,\n} from 'react';\nimport { Todo } from './types/Todo';\nimport {\n  addTodo,\n  deleteTodo,\n  getTodos,\n  updateTodo,\n} from './api/todos';\nimport { ErrorContext } from './ErrorContext';\n\nconst USER_ID = 11592;\n\nexport type State = {\n  todos: Todo[],\n  uncompletedTodosAmount: number,\n  setTodos: (todos: Todo[]) => void,\n  addNewTodo: (todo: Omit <Todo, 'id'>) => Promise<void>,\n  isLoading: boolean,\n  setIsLoading: (value: boolean) => void,\n  tempTodo: Todo | null,\n  setTempTodo: (todo: Todo | null) => void,\n  removeTodo: (id: number) => Promise<void>,\n  loadingMap: { [key: number]: boolean } | {},\n  toggleTodo: (todo: Todo, completedStatus?: boolean) => Promise<void>,\n  editTodo: (editedTodo: Todo, newTitle: string) => Promise<void>,\n};\n\nexport const TodosContext = React.createContext<State>({\n  todos: [],\n  uncompletedTodosAmount: 0,\n  setTodos: () => {},\n  addNewTodo: async () => {},\n  isLoading: false,\n  setIsLoading: () => {},\n  tempTodo: null,\n  setTempTodo: () => {},\n  removeTodo: async () => {},\n  loadingMap: {},\n  toggleTodo: async () => {},\n  editTodo: async () => {},\n});\n\ninterface Props {\n  children: React.ReactNode,\n}\n\nexport const TodosProvider: React.FC<Props> = ({ children }) => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [tempTodo, setTempTodo] = useState<Todo | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadingMap, setLoadingMap] = useState({});\n\n  const { setError } = useContext(ErrorContext);\n\n  useEffect(() => {\n    getTodos(USER_ID)\n      .then(setTodos)\n      .catch(() => {\n        setError('Unable to load todos');\n      });\n  }, []);\n\n  const uncompletedTodosAmount = useMemo(() => todos\n    .filter(todo => !todo.completed).length, [todos]);\n\n  function addNewTodo(createdTodo: Omit <Todo, 'id'>) {\n    return addTodo(createdTodo)\n      .then(newTodo => {\n        setTodos(currentTodos => [...currentTodos, newTodo]);\n      })\n      .catch((err) => {\n        setError('Unable to add a todo');\n        throw (err);\n      })\n      .finally(() => setTempTodo(null));\n  }\n\n  const removeTodo = (id: number) => {\n    setIsLoading(true);\n    setLoadingMap(prevMap => ({\n      ...prevMap,\n      [id]: true,\n    }));\n\n    return deleteTodo(id)\n      .then(() => setTodos(\n        currentTodos => currentTodos.filter(todo => todo.id !== id),\n      ))\n      .catch(() => {\n        setError('Unable to delete a todo');\n        setIsLoading(false);\n        setLoadingMap({});\n      })\n      .finally(() => {\n        setIsLoading(false);\n        setLoadingMap(prevMap => ({\n          ...prevMap,\n          [id]: false,\n        }));\n      });\n  };\n\n  const toggleTodo = (\n    toggledTodo: Todo,\n    completedStatus: boolean = toggledTodo.completed,\n  ) => {\n    setLoadingMap(prevMap => ({\n      ...prevMap,\n      [toggledTodo.id]: true,\n    }));\n\n    return updateTodo({\n      ...toggledTodo,\n      completed: !completedStatus,\n    })\n      .then(() => setTodos(currentTodos => currentTodos.map(\n        todo => (todo.id === toggledTodo.id\n          ? {\n            ...todo,\n            completed: !completedStatus,\n          }\n          : todo),\n      )))\n      .catch(() => {\n        setError('Unable to update a todo');\n        setLoadingMap({});\n      })\n      .finally(() => {\n        setLoadingMap(prevMap => ({\n          ...prevMap,\n          [toggledTodo.id]: false,\n        }));\n      });\n  };\n\n  const editTodo = (editedTodo: Todo, newTitle: string) => {\n    setLoadingMap(prevMap => ({\n      ...prevMap,\n      [editedTodo.id]: true,\n    }));\n\n    const updatedTodos = todos.map(\n      todo => (todo.id === editedTodo.id\n        ? {\n          ...todo,\n          title: newTitle,\n        }\n        : todo),\n    );\n\n    setTodos(updatedTodos);\n\n    return updateTodo({\n      ...editedTodo,\n      title: newTitle,\n    })\n      .then(() => setTodos(currentTodos => currentTodos.map(\n        todo => (todo.id === editedTodo.id\n          ? {\n            ...todo,\n            title: newTitle,\n          }\n          : todo),\n      )))\n      .catch((err) => {\n        setError('Unable to update a todo');\n        setLoadingMap({});\n        throw err;\n      })\n      .finally(() => {\n        setLoadingMap(prevMap => ({\n          ...prevMap,\n          [editedTodo.id]: false,\n        }));\n      });\n  };\n\n  const value = useMemo(() => ({\n    todos,\n    uncompletedTodosAmount,\n    setTodos,\n    addNewTodo,\n    isLoading,\n    setIsLoading,\n    tempTodo,\n    setTempTodo,\n    removeTodo,\n    loadingMap,\n    toggleTodo,\n    editTodo,\n  }), [todos, tempTodo, isLoading, loadingMap]);\n\n  return (\n    <TodosContext.Provider value={value}>\n      {children}\n    </TodosContext.Provider>\n  );\n};\n","import cn from 'classnames';\n\nimport React, {\n  useContext, useEffect, useRef, useState,\n} from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodosContext } from '../../TodosContext';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => {\n  const { id, title, completed } = todo;\n  const [isHover, setIsHover] = useState(false);\n  const [newTitle, setNewTitle] = useState(title);\n  const [isEditingMode, setIsEditingMode] = useState(false);\n\n  const {\n    removeTodo,\n    loadingMap,\n    toggleTodo,\n    editTodo,\n  } = useContext(TodosContext);\n\n  const titleField = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (titleField.current && isEditingMode) {\n      titleField.current.focus();\n    }\n  }, [isEditingMode]);\n\n  const hadnleTitleChange = () => {\n    if (newTitle !== title) {\n      if (newTitle.trim()) {\n        editTodo(todo, newTitle.trim())\n          .then(() => setIsEditingMode(false))\n          .catch(() => setIsEditingMode(true));\n      } else {\n        removeTodo(id);\n      }\n    }\n\n    setIsEditingMode(false);\n  };\n\n  const handleTodoEditing = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    hadnleTitleChange();\n  };\n\n  const handleEscEditing = (event: React.KeyboardEvent) => {\n    if (event.key === 'Escape') {\n      setIsEditingMode(false);\n    }\n  };\n\n  return (\n    <div\n      data-cy=\"Todo\"\n      className={cn('todo', {\n        completed: todo.completed,\n      })}\n      onMouseEnter={() => setIsHover(true)}\n      onMouseLeave={() => setIsHover(false)}\n      onDoubleClick={() => setIsEditingMode(true)}\n    >\n      <label\n        className=\"todo__status-label\"\n        htmlFor=\"status\"\n      >\n        <input\n          id=\"status\"\n          data-cy=\"TodoStatus\"\n          type=\"checkbox\"\n          className=\"todo__status\"\n          checked={completed}\n          onChange={() => toggleTodo(todo)}\n        />\n      </label>\n\n      {!isEditingMode ? (\n        <span data-cy=\"TodoTitle\" className=\"todo__title\">\n          {title}\n        </span>\n      ) : (\n        <form onSubmit={handleTodoEditing}>\n          <input\n            data-cy=\"TodoTitleField\"\n            ref={titleField}\n            type=\"text\"\n            className=\"todo__title-field\"\n            placeholder=\"Empty todo will be deleted\"\n            value={newTitle}\n            onChange={event => setNewTitle(event.target.value)}\n            onKeyUp={handleEscEditing}\n            onBlur={hadnleTitleChange}\n\n          />\n        </form>\n      )}\n\n      {!isEditingMode && (\n        <button\n          type=\"button\"\n          className={cn('todo__remove', {\n            'is-visible': !isHover,\n          })}\n          data-cy=\"TodoDelete\"\n          onClick={() => removeTodo(id)}\n        >\n          ×\n        </button>\n      )}\n\n      <div\n        data-cy=\"TodoLoader\"\n        className={cn('modal overlay', {\n          'is-active': (loadingMap as { [key: number]: boolean })[id],\n        })}\n      >\n        <div className=\"modal-background has-background-white-ter\" />\n        <div className=\"loader\" />\n      </div>\n    </div>\n  );\n};\n","import React, { useContext } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\nimport { TodosContext } from '../../TodosContext';\n\ninterface Props {\n  todos: Todo[]\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  const {\n    tempTodo,\n  } = useContext(TodosContext);\n\n  return (\n    <section className=\"todoapp__main\" data-cy=\"TodoList\">\n      {todos.map(todo => (\n        <TodoItem todo={todo} key={todo.id} />\n      ))}\n\n      {tempTodo && (\n        <div data-cy=\"Todo\" className=\"todo\">\n          <label\n            className=\"todo__status-label\"\n            htmlFor=\"status\"\n          >\n            <input\n              id=\"status\"\n              data-cy=\"TodoStatus\"\n              type=\"checkbox\"\n              className=\"todo__status\"\n            />\n          </label>\n\n          <span data-cy=\"TodoTitle\" className=\"todo__title\">\n            {tempTodo.title}\n          </span>\n\n          <button type=\"button\" className=\"todo__remove\" data-cy=\"TodoDelete\">\n            ×\n          </button>\n\n          <div data-cy=\"TodoLoader\" className=\"modal overlay is-active\">\n            <div className=\"modal-background has-background-white-ter\" />\n            <div className=\"loader\" />\n          </div>\n        </div>\n      )}\n    </section>\n  );\n};\n","import cn from 'classnames';\nimport React, { useContext } from 'react';\nimport { ErrorContext } from '../../ErrorContext';\n\nexport const ErrorNotification: React.FC = () => {\n  const {\n    error,\n    setError,\n  } = useContext(ErrorContext);\n\n  const handleHideErrorClick = () => {\n    setError('');\n  };\n\n  return (\n    <div\n      data-cy=\"ErrorNotification\"\n      className={\n        cn('notification is-danger is-light has-text-weight-normal', {\n          hidden: !error,\n        })\n      }\n    >\n      <button\n        data-cy=\"HideErrorButton\"\n        aria-label=\"title\"\n        type=\"button\"\n        className=\"delete\"\n        onClick={handleHideErrorClick}\n      />\n      {error}\n    </div>\n  );\n};\n","export const USER_ID = 11592;\n","import React, {\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport cn from 'classnames';\n\nimport { ErrorContext } from '../../ErrorContext';\nimport { TodosContext } from '../../TodosContext';\nimport { USER_ID } from '../../utils/constants';\n\nexport const Header: React.FC = () => {\n  const [newTodoTitle, setNewTodoTitle] = useState('');\n  const { setError } = useContext(ErrorContext);\n\n  const {\n    todos,\n    uncompletedTodosAmount,\n    addNewTodo,\n    isLoading,\n    setIsLoading,\n    setTempTodo,\n    toggleTodo,\n  } = useContext(TodosContext);\n\n  const titleField = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (titleField.current && !isLoading) {\n      titleField.current.focus();\n    }\n  }, [isLoading]);\n\n  const handleSubmitNewTodo = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setError('');\n    setIsLoading(true);\n\n    if (!newTodoTitle.trim()) {\n      setError('Title should not be empty');\n      setIsLoading(false);\n      setNewTodoTitle('');\n\n      return;\n    }\n\n    if (newTodoTitle.trim()) {\n      setTempTodo({\n        id: 0,\n        title: newTodoTitle.trim(),\n        completed: false,\n        userId: USER_ID,\n      });\n\n      addNewTodo({\n        title: newTodoTitle.trim(),\n        completed: false,\n        userId: USER_ID,\n      })\n        .then(() => {\n          setNewTodoTitle('');\n          setIsLoading(false);\n        })\n        .catch(() => {\n          setIsLoading(false);\n        });\n    }\n  };\n\n  const toggleAll = () => {\n    const isAllTodosCompleted = todos.every(todo => todo.completed === true);\n\n    const togglePromises = todos\n      .map(todo => toggleTodo(todo, isAllTodosCompleted));\n\n    Promise.all(togglePromises);\n  };\n\n  return (\n    <header className=\"todoapp__header\">\n      {!!todos.length && (\n        <button\n          type=\"button\"\n          aria-label=\"title\"\n          className={cn('todoapp__toggle-all', {\n            active: !uncompletedTodosAmount,\n          })}\n          data-cy=\"ToggleAllButton\"\n          onClick={toggleAll}\n        />\n      )}\n\n      <form onSubmit={handleSubmitNewTodo}>\n        <input\n          data-cy=\"NewTodoField\"\n          type=\"text\"\n          ref={titleField}\n          className=\"todoapp__new-todo\"\n          placeholder=\"What needs to be done?\"\n          disabled={isLoading}\n          value={newTodoTitle}\n          onChange={(event) => setNewTodoTitle(event.target.value)}\n        />\n      </form>\n    </header>\n  );\n};\n","import React, { useContext } from 'react';\nimport cn from 'classnames';\n\nimport { Status } from '../../types/FilterStatus';\nimport { TodosContext } from '../../TodosContext';\n\ntype Props = {\n  filterParam: Status,\n  onFilterChange: (value: Status) => void,\n};\n\nexport const Footer: React.FC<Props> = ({ filterParam, onFilterChange }) => {\n  const {\n    todos,\n    uncompletedTodosAmount,\n    removeTodo,\n  } = useContext(TodosContext);\n\n  const clearAllCompleted = () => {\n    const removePromises = todos\n      .filter(todo => todo.completed)\n      .map(todo => removeTodo(todo.id));\n\n    Promise.all(removePromises);\n  };\n\n  return (\n    <footer className=\"todoapp__footer\" data-cy=\"Footer\">\n      <span className=\"todo-count\" data-cy=\"TodosCounter\">\n        {uncompletedTodosAmount === 1\n          ? '1 item left'\n          : `${uncompletedTodosAmount} items left`}\n      </span>\n\n      <nav className=\"filter\" data-cy=\"Filter\">\n        <a\n          href=\"#/\"\n          className={cn('filter__link', {\n            selected: filterParam === Status.All,\n          })}\n          onClick={() => onFilterChange(Status.All)}\n          data-cy=\"FilterLinkAll\"\n        >\n          All\n        </a>\n\n        <a\n          href=\"#/active\"\n          className={cn('filter__link', {\n            selected: filterParam === Status.Active,\n          })}\n          onClick={() => onFilterChange(Status.Active)}\n          data-cy=\"FilterLinkActive\"\n        >\n          Active\n        </a>\n\n        <a\n          href=\"#/completed\"\n          className={cn('filter__link', {\n            selected: filterParam === Status.Completed,\n          })}\n          onClick={() => onFilterChange(Status.Completed)}\n          data-cy=\"FilterLinkCompleted\"\n        >\n          Completed\n        </a>\n      </nav>\n\n      <button\n        type=\"button\"\n        className={cn('todoapp__clear-completed', {\n          'is-invisible': uncompletedTodosAmount === todos.length,\n        })}\n        data-cy=\"ClearCompletedButton\"\n        disabled={uncompletedTodosAmount === todos.length}\n        onClick={clearAllCompleted}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n};\n","/* eslint-disable max-len */\n/* eslint-disable jsx-a11y/control-has-associated-label */\n/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, {\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\n\nimport { UserWarning } from './components/UserWarning';\nimport { TodoList } from './components/TodoList';\nimport { Status } from './types/FilterStatus';\nimport { ErrorNotification } from './components/ErrorNotification';\nimport { TodosContext } from './TodosContext';\nimport { ErrorContext } from './ErrorContext';\nimport { filterTodos } from './utils/filterTodos';\nimport { Header } from './components/Header';\nimport { USER_ID } from './utils/constants';\nimport { Footer } from './components/Footer';\n\nexport const App: React.FC = () => {\n  const [filterParam, setFilterParam] = useState(Status.All);\n  const { error, setError } = useContext(ErrorContext);\n\n  const {\n    todos,\n  } = useContext(TodosContext);\n\n  useEffect(() => {\n    let timer: NodeJS.Timeout | undefined;\n\n    if (error) {\n      timer = setTimeout(() => {\n        setError('');\n      }, 3000);\n    }\n\n    return () => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n    };\n  }, [error]);\n\n  const visibleTodos = useMemo(() => {\n    return filterTodos(todos, filterParam);\n  }, [todos, filterParam]);\n\n  if (!USER_ID) {\n    return <UserWarning />;\n  }\n\n  return (\n    <div className=\"todoapp\">\n      <h1 className=\"todoapp__title\">todos</h1>\n\n      <div className=\"todoapp__content\">\n        <Header />\n\n        {!!todos.length && (\n          <TodoList\n            todos={visibleTodos}\n          />\n        )}\n\n        {!!todos.length && (\n          <Footer\n            filterParam={filterParam}\n            onFilterChange={setFilterParam}\n          />\n        )}\n      </div>\n\n      <ErrorNotification />\n    </div>\n  );\n};\n","import { Status } from '../types/FilterStatus';\nimport { Todo } from '../types/Todo';\n\nexport const filterTodos = (todos: Todo[], fitlerParam: Status) => {\n  switch (fitlerParam) {\n    case Status.Active:\n      return todos.filter(todo => !todo.completed);\n    case Status.Completed:\n      return todos.filter(todo => todo.completed);\n    default:\n      return todos;\n  }\n};\n","import React from 'react';\nimport { render } from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './styles/index.scss';\n\nimport { App } from './App';\nimport { ErrorProvider } from './ErrorContext';\nimport { TodosProvider } from './TodosContext';\n\nconst root = document.getElementById('root');\n\nrender(\n  <ErrorProvider>\n    <TodosProvider>\n      <App />\n    </TodosProvider>\n  </ErrorProvider>, root,\n);\n"],"sourceRoot":""}